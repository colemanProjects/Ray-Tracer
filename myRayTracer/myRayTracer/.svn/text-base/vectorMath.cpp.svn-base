#include "vectorMath.h"


float vectorMath::dot(vector<float> vect1, vector<float> vect2)
{
	return (vect1[0] * vect2[0]) + (vect1[1] * vect2[1]) + (vect1[2] * vect2[2]);
}

float vectorMath::magnitude(vector<float> myVect)
{
	float sum = myVect[0] + myVect[1] + myVect[2];
	return sum;
}

vector<float> vectorMath::plus(vector<float> vect1, vector<float> vect2)
{
	vector<float> result;
	result.push_back(vect1[0] + vect2[0]);
	result.push_back(vect1[1] + vect2[1]);
	result.push_back(vect1[2] + vect2[2]);
	
	return result;
}
vector<float> vectorMath::minus(vector<float> vect1, vector<float> vect2)
{
	vector<float> result;
	result.push_back(vect1[0] - vect2[0]);
	result.push_back(vect1[1] - vect2[1]);
	result.push_back(vect1[2] - vect2[2]);
	
	return result;
}

vector<float> vectorMath::scalarMultiply(vector<float> vect1, float scalar)
{
	vector<float> result;
	result.push_back(vect1[0]  * scalar);
	result.push_back(vect1[1]  * scalar);
	result.push_back(vect1[2]  * scalar);
	
	return result;
}